#!/usr/bin/env node

/**
 * To encrypt a file:
 * -e <fileToEncrypt> <password>
 * To decrype a file:
 * -d <fileToDecrypt> <password>
 */
let args = require('minimist')(process.argv.slice(2), {
    boolean: ['e', 'd', 'h'],
    string: ['f'],
    alias: {
        e: 'encrypt',
        d: 'decrypt',
        f: 'filename',
        h: 'help',
    }
}),
    dotenvenc = require('../index'),
    passwd = args._[0];

/**
 * @param   {String}    error       optional error message to print before printing the help syntax
 */
function printHelp(error) {
    if (error) {
        console.log(`Error: `, error);
    }
    console.log(`
Arguments:
    -e, --encrypt    to encrypt the unencrypted ".env" file into ".env.enc" (encryption is the default operation on command line; can be ommited)
    -d, --decrypt    to decrypt the default encrypted ".env.enc" file into .env
    -f, --filename   define custom encrypted file e.g. ".env.enc.production" (for both encryption and decryption operations)
    -h, --help       print this help

Usage:
    $ dotenvenc [-e|-d] <password>

Examples:
    - Encryption:
        - To encrypt unencrypted ".env" into default ".env.enc"
            $ dotenvenc -e myEncryptionPassword
        - Or equivalently ommitting the '-e' flag
            $ dotenvenc myEncryptionPassword
    
        - To encrypt unencrypted ".env" into custom file e.g. ".env.enc.production"
            $ dotenvenc -e myEncryptionPassword -f .env.enc.production
        - Or equivalently ommitting the '-e' flag
            $ dotenvenc myEncryptionPassword -f .env.enc.production
    
    - Decryption:
        - To decrypt default ".env.enc" into the original ".env"
            $ dotenvenc -d myEncryptionPassword
        - To decrypt custom encrypted file e.g. ".env.enc.production" into unencrypted ".env"
            $ dotenvenc -d myEncryptionPassword -f .env.enc.production
`);
    process.exit(0);
}

if (args.h) {
    printHelp();
} else if (!passwd) {
    printHelp('missing password');
} else if (args.d) {
    // Decrypt ".env.enc" into ".env" (or custom filename if provided via -f argument)
    dotenvenc(passwd, args.f);
} else {
    // Script's default operation is to encrypt the ".env" into ".env.enc" (or custom filename if provided via -f argument)
    dotenvenc.encrypt(passwd, args.f);
}
